# Build ASP.NET Core project using Azure Pipelines
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core?view=vsts

pool:
  vmImage: 'ubuntu-latest'
  
variables:
  buildConfiguration: 'Release'
  buildPlatform: 'Any CPU'
  solution: '**\Home.sln'
  disable.coverage.autogenerate: 'true' # because we overwrite the coverage report generation

steps:
- task: UseDotNet@2
  inputs:
    version: '5.0.x'
    includePreviewVersions: true
- task: UseDotNet@2
  inputs:
    version: '3.1.x'
    packageType: runtime
- task: NuGetToolInstaller@1
- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool
  displayName: Install ReportGenerator tool
- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . coverlet.console
  displayName: Install Coverlet.Console tool
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: 'Home.sln'
    arguments: '--configuration $(buildConfiguration)'
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
    projects: '**/test/*.Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:Include="[Home.*]*" /p:Exclude="[*Tests]*"'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)'
    ArtifactName: 'src'
    publishLocation: 'Container'

- script: |
    mkdir .\reports
    .\reportgenerator.exe -reports:*coverage.cobertura.xml -targetdir:reports -reporttypes:"HTMLInline;HTMLChart"
    dir .\reports
  displayName: Create coverage reports in html format to be displayed in AzureDevOps
- script: |
    mkdir .\reports
    .\reportgenerator.exe -reports:*coverage.cobertura.xml -targetdir:reports -reporttypes:"cobertura"
    dir .\reports
  displayName: Create coverage reports in xml format to be used for summary

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: '$(system.defaultworkingdirectory)\reports\Cobertura.xml'
    reportDirectory: '$(system.defaultworkingdirectory)\reports'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/Home.Core.csproj'
    versioningScheme: 'off'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'